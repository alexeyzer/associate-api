syntax = "proto3";
package user.api;

option go_package = "github.com/alexeyzer/associate-api";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "google/protobuf/wrappers.proto";

 service associateApiService {
  rpc ListStimusWords(google.protobuf.Empty) returns (ListStimusWordsResponse) {
    option (google.api.http) = {
      get: "/v1/stimus-word"
    };
  };

  rpc CreateExperiment(CreateExperimentRequest) returns (CreateExperimentResponse) {
    option (google.api.http) = {
      post: "/v1/experiment"
      body: "*"
    };
  };

  rpc CreateExperimentResult(CreateExperimentResultRequest) returns (CreateExperimentResultResponse) {
    option (google.api.http) = {
      post: "/v1/experiment-result"
      body: "*"
    };
  };

  rpc GetExperiment(GetExperimentRequest) returns (GetExperimentResponse) {
    option (google.api.http) = {
      get: "/v1/experiment"
    };
  };

  rpc ListExperiment(ListExperimentRequest) returns (ListExperimentResponse) {
    option (google.api.http) = {
      get: "/v1/experiment/list"
    };
  };

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/v1/user"
      body: "*"
    };
  };

   rpc ListUsers(google.protobuf.Empty) returns (ListUsersResponse) {
     option (google.api.http) = {
       get: "/v1/user/list"
     };
   };

   rpc GetUser(GetUserRequest) returns (GetUserResponse) {
     option (google.api.http) = {
       get: "/v1/user"
     };
   };

   rpc Login(LoginRequest) returns (LoginResponse) {
     option (google.api.http) = {
       post: "/v1/login"
       body: "*"
     };
   };


   rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
     option (google.api.http) = {
       post: "/v1/logout"
       body: "*"
     };
   };

   rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
     option (google.api.http) = {
       post: "/v1/role"
       body: "*"
     };
   };
   rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {
     option (google.api.http) = {
       put: "/v1/role"
       body: "*"
     };
   };

   rpc DeleteRole(DeleteRoleRequest) returns (google.protobuf.Empty) {
     option (google.api.http) = {
       delete: "/v1/role"
     };
   };

   rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
     option (google.api.http) = {
       get: "/v1/role"
     };
   };

   rpc ListRoles(google.protobuf.Empty) returns (ListRolesResponse) {
     option (google.api.http) = {
       get: "/v1/role/list"
     };
   };

   rpc CreateUserRole(CreateUserRoleRequest) returns (CreateUserRoleResponse) {
     option (google.api.http) = {
       post: "/v1/user-role"
       body: "*"
     };
   };

   rpc GetUserRole(GetUserRoleRequest) returns (GetUserRoleResponse) {
     option (google.api.http) = {
       get: "/v1/user-role"
     };
   };

   rpc DeleteUserRole(DeleteUserRoleRequest) returns (google.protobuf.Empty) {
     option (google.api.http) = {
       delete: "/v1/user-role"
     };
   };

   rpc ListUserRoles(ListUserRolesRequest) returns (ListUserRolesResponse) {
     option (google.api.http) = {
       get: "/v1/user-role/list"
     };
   };
 }

 message ListExperimentRequest {
  Page page = 1;
 }

 message ListExperimentResponse {
  repeated Experiment experiments = 1;

  message Experiment {
    int64 id = 1;
    string name = 2;
    google.protobuf.StringValue description = 3;
    int64 conducted_experiments = 4;
    google.protobuf.Int64Value requeired_amount = 5;
  }
 }

 message CreateExperimentResultRequest {
  int64 experiment_id = 1;
  int64 user_id = 2;
  bool is_anonymous  = 3;
  repeated ExperimentWords answers = 4;
 }

 message CreateExperimentResultResponse {}

 message ExperimentWords {
  int64 stimus_word_id = 1;
  string assotiation_word = 3;
  int64 time_spend = 4;
 }

 message ListStimusWordsResponse {
  repeated StimusWord words = 1;
 }

 message StimusWord {
  int64 id = 1;
  string name = 2;
 }

 message GetExperimentRequest {
  int64 id = 1;
 }

 message GetExperimentResponse {
  int64 id = 1;
  string name = 2;
  google.protobuf.StringValue description = 3;
  google.protobuf.Int64Value requeired_amount = 4;
  repeated ExperimentStimuses experiment_stimuses = 5;
  int64 conducted_experiments = 6;
  repeated ExperimentAssociations experiment_assotiations = 7;
 }
 
 message ExperimentAssociations {
    int64 stimus_word_id = 1;
    string assotiation_word = 2;
    int64 time_spend = 3;
  }

 message CreateExperimentRequest {
  string name = 1;
  google.protobuf.StringValue description = 2;
  google.protobuf.Int64Value requeired_amount = 3;
  repeated ExperimentStimuses experiment_stimuses = 4;
 }

 message ExperimentStimuses {
  google.protobuf.Int64Value id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.Int64Value limited_response_time = 3; // seconds
 }

 message CreateExperimentResponse {
  int64 id = 1;
 }

 message GetUserRequest {
   int64 id = 1;
 }

message UpdateRoleRequest {
 int64 id = 1;
 string name = 2;
 string description = 3;
}

message UpdateRoleResponse {
  int64 id = 1;
  string name = 2;
  string description = 3;
}

message ListUserRolesResponse {
   repeated string user_roles = 1;
}

 message ListUserRolesRequest {
   int64 user_id = 1;
 }

 message DeleteUserRoleRequest {
   int64 id = 1;
 }

message GetUserRoleRequest {
   int64 id = 1;
}

message GetUserRoleResponse {
  int64 id = 1;
  int64 user_id = 2;
  int64 role_id = 3;
}

 message CreateUserRoleResponse {
   int64 id = 1;
   int64 user_id = 2;
   int64 role_id = 3;
 }

 message CreateUserRoleRequest {
   int64 user_id = 1;
   int64 role_id = 2;
 }

 message DeleteRoleRequest {
   int64 id = 1;
 }

 message CreateRoleRequest {
   string name = 1;
   string description = 2;
 }

 message CreateRoleResponse {
   int64 id = 1;
   string name = 2;
   string description = 3;
 }

 message GetRoleRequest {
   int64 id = 1;
 }

 message GetRoleResponse {
   int64 id = 1;
   string name = 2;
   string description = 3;
 }

message ListRolesResponse {
   repeated GetRoleResponse roles = 1;
}

message LoginRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2 [(validate.rules).string = {min_len: 1, max_len: 600}];
}

 message CreateUserRequest {
    string name = 1 [(validate.rules).string = {min_len: 1, max_len: 100}];
    string password = 2 [(validate.rules).string = {min_len: 1, max_len: 600}];
    string surname = 3 [(validate.rules).string = {min_len: 1, max_len: 100}];
    string patronymic = 4 [(validate.rules).string = {min_len: 1, max_len: 100}];
    string phone = 5;
    string email = 6 [(validate.rules).string.email = true];
 }

 message ListUsersResponse {
   repeated CreateUserResponse users = 1;
 }

message GetUserResponse {
  int64 id = 1;
  string name = 2;
  string surname = 3;
  string patronymic = 4;
  string phone = 5;
  string email = 6;
  repeated UserRoles roles = 7;
  message UserRoles {
    int64 user_role_id = 1;
    string name = 2;
  }
}

message CreateUserResponse {
   int64 id = 1;
   string name = 2;
   string surname = 3;
   string patronymic = 4;
   string phone = 5;
   string email = 6;
}

message LoginResponse {
   int64 id = 1;
   string name = 2;
   string surname = 3;
   string patronymic = 4;
   string phone = 5;
   string email = 6;
   string session = 7;
   bool access_to_admin_panel = 8;
   repeated CreateRoleResponse roles = 9;
}

message Page {
  int64 number = 1;
  int64 limit = 2;
}